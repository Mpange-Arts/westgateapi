{
  "C:\\Users\\Mpange\\Videos\\ecom_startup_code\\ecom_startup_code\\server_side\\online_store_api": {
    "versionSfCore": null,
    "versionFramework": "4.1.6",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {},
    "composeServiceName": null,
    "servicePath": "C:\\Users\\Mpange\\Videos\\ecom_startup_code\\ecom_startup_code\\server_side\\online_store_api",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "mpange",
      "service": "online-store-api",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "memorySize": 2048,
        "stage": "production",
        "region": "us-east-1",
        "timeout": 15,
        "lambdaHashingVersion": "20201221",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "HelloLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/online-store-api-production-hello"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "online-store-api",
                          "production",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/online-store-api-production*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/online-store-api-production*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "online-store-api",
                      "production",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "HelloLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/online-store-api/production/1719280603304-2024-06-25T01:56:43.304Z/online-store-api.zip"
                },
                "Handler": "handler.hello",
                "Runtime": "nodejs20.x",
                "FunctionName": "online-store-api-production-hello",
                "MemorySize": 2048,
                "Timeout": 15,
                "Environment": {
                  "Variables": {
                    "PORT": "3000",
                    "MONGO_URL": "mongodb+srv://clusterDBWEST:chanda@cluster0.ggblmc7.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
                    "STRIPE_PBLK_KET_TST": "pk_test_51OJVbpHXMr425k3sftbpJBUm6sEGN8RLrWj6jQd4DFMPMA66Ixp5we7ZTsAsS260Njm2CPoVd45JC7fHrtSKhlRj009SPH3Ki0",
                    "STRIPE_SKRT_KET_TST": "sk_test_51OJVbpHXMr425k3s3Xc5QpvcvuBfk1IqvTNVKi9raiJei2jYdd9Y7OBSXQoeE3aNzwtdkfFVD6KuBk5qaROKgKAW00dhynDMGp",
                    "ONE_SIGNAL_APP_ID": "910f830b-5a43-48e2-80ba-ce80d43112db",
                    "ONE_SIGNAL_REST_API_KEY": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "HelloLogGroup"
              ]
            },
            "HelloLambdaVersionX63ZEq0QJRwsmcljj0J9cqGL3c0cOeDLsI1Zh1AAo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "HelloLambdaFunction"
                },
                "CodeSha256": "W1CPhOnSNbYs4V7ePtxPM2lK3GDHcWz/wDnW6cOgyQs="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "production-online-store-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceProxyVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "{proxy+}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodProxyVarAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProxyVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "HelloLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "HelloLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "HelloLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "HelloLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1719280598743": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "production"
              },
              "DependsOn": [
                "ApiGatewayMethodProxyVarAny",
                "ApiGatewayMethodAny"
              ]
            },
            "HelloLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "HelloLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-online-store-api-production-ServerlessDeploymentBucketName"
              }
            },
            "HelloLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "HelloLambdaVersionX63ZEq0QJRwsmcljj0J9cqGL3c0cOeDLsI1Zh1AAo"
              },
              "Export": {
                "Name": "sls-online-store-api-production-HelloLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/production"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-online-store-api-production-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "hello": {
          "handler": "handler.hello",
          "events": [
            {
              "http": {
                "path": "{proxy+}",
                "method": "any",
                "integration": "AWS_PROXY"
              }
            },
            {
              "http": {
                "path": "",
                "method": "any",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "environment": {
            "PORT": "3000",
            "MONGO_URL": "mongodb+srv://clusterDBWEST:chanda@cluster0.ggblmc7.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
            "STRIPE_PBLK_KET_TST": "pk_test_51OJVbpHXMr425k3sftbpJBUm6sEGN8RLrWj6jQd4DFMPMA66Ixp5we7ZTsAsS260Njm2CPoVd45JC7fHrtSKhlRj009SPH3Ki0",
            "STRIPE_SKRT_KET_TST": "sk_test_51OJVbpHXMr425k3s3Xc5QpvcvuBfk1IqvTNVKi9raiJei2jYdd9Y7OBSXQoeE3aNzwtdkfFVD6KuBk5qaROKgKAW00dhynDMGp",
            "ONE_SIGNAL_APP_ID": "910f830b-5a43-48e2-80ba-ce80d43112db",
            "ONE_SIGNAL_REST_API_KEY": "<REDACTED>"
          },
          "name": "online-store-api-production-hello",
          "package": {},
          "memory": 2048,
          "timeout": 15,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "HelloLambdaVersionX63ZEq0QJRwsmcljj0J9cqGL3c0cOeDLsI1Zh1AAo"
        }
      }
    },
    "serviceRawFile": "org: mpange\r\nservice: online-store-api\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x\r\n  memorySize: 2048\r\n  stage: production\r\n  region: us-east-1\r\n  timeout: 15\r\n  lambdaHashingVersion: 20201221\r\n\r\nfunctions:\r\n  hello:\r\n    handler: handler.hello\r\n    events:\r\n      - http:\r\n          path: /{proxy+}\r\n          method: ANY\r\n      - http:\r\n          path: /\r\n          method: ANY\r\n    environment: \r\n      PORT: 3000\r\n      MONGO_URL: 'mongodb+srv://clusterDBWEST:chanda@cluster0.ggblmc7.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0'\r\n      STRIPE_PBLK_KET_TST: 'pk_test_51OJVbpHXMr425k3sftbpJBUm6sEGN8RLrWj6jQd4DFMPMA66Ixp5we7ZTsAsS260Njm2CPoVd45JC7fHrtSKhlRj009SPH3Ki0'\r\n      STRIPE_SKRT_KET_TST: 'sk_test_51OJVbpHXMr425k3s3Xc5QpvcvuBfk1IqvTNVKi9raiJei2jYdd9Y7OBSXQoeE3aNzwtdkfFVD6KuBk5qaROKgKAW00dhynDMGp'\r\n      ONE_SIGNAL_APP_ID: '910f830b-5a43-48e2-80ba-ce80d43112db'\r\n      ONE_SIGNAL_REST_API_KEY: 'NGMzMTE1ZDAtMWE5Yy00YmY3LWE1NTctZTNkMTI5ZjljMzZk'\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "5505942824ec6f415af8bdd350e99bb9",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "5486daf0-9619-457f-a47e-dfdd0771c899",
    "orgName": "mpange",
    "userId": "p7xwPZDlvBZ6GnHwKZ",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "mpange",
    "subscription": null,
    "userEmail": "mpangecreativearts@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "730335413520",
    "versionSf": "4.1.6",
    "serviceProviderAwsCfStackName": "online-store-api-production",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:730335413520:stack/online-store-api-production/3ec330b0-3295-11ef-81f9-0e17c5e21945",
    "serviceProviderAwsCfStackCreated": "2024-06-25T01:50:05.727Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-25T01:57:20.674Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "HelloLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:730335413520:function:online-store-api-production-hello:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-online-store-api-production-HelloLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://nmnwtkf3c5.execute-api.us-east-1.amazonaws.com/production",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-online-store-api-production-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "online-store-api-producti-serverlessdeploymentbuck-y8aehkyixswt",
        "ExportName": "sls-online-store-api-production-ServerlessDeploymentBucketName"
      }
    ]
  }
}